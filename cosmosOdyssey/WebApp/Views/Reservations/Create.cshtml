@model WebApp.ViewModels.Reservations.CreateReservationModel
@{
    ViewData["Title"] = "Create";
}

<h1>Reservation</h1>

<h4>@Model.ProviderReport.FromLocation  <span>&#8594;</span> @Model.ProviderReport.ToLocation</h4>
<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">
            <input type="hidden" asp-for="ProviderReport.Id" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="FirstName" class="control-label">First Name</label>
                <input asp-for="FirstName" class="form-control"/>
                <span asp-validation-for="FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LastName" class="control-label">Last Name</label>
                <input asp-for="LastName" class="form-control"/>
                <span asp-validation-for="LastName" class="text-danger"></span>
            </div>
            <hr/>

            <div>
                <b>Travel time:</b> @FormatTimeSpan(Model.ProviderReport.TravelTime)
            </div>
            <div>
                <b>Price:</b> @Model.ProviderReport.Price â‚¬
            </div>
            <br/>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary"/>
            </div>
        </form>
    </div>
</div>

<div>

    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}


@functions {
    // Helper method to format TimeSpan
    public static string FormatTimeSpan(TimeSpan timeSpan)
    {
        string formattedDay = timeSpan.Days > 1 || timeSpan.Days == 0 ? "days" : "day";
        string formattedDuration = $"{timeSpan.Days} {formattedDay} {timeSpan.Hours}h:{timeSpan.Minutes}m";
        return formattedDuration;
    }

}